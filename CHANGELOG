# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).



    Added for new features.
    Changed for changes in existing functionality.
    Deprecated for soon-to-be removed features.
    Removed for now removed features.
    Fixed for any bug fixes.
    Security in case of vulnerabilities.


## [Unreleased]

- Add AI element
- Add component manager.. remove components too..

## [Dev - 13/01/2023] - Add ManagerEntity
### Added
- Entity Manager that creates entity and only increments id counter.


## [Dev - 08/01/2023] - Better collision system
### Added
- Component destroyable after hit, Invulnerabilit, Collided
- System damage generator (add suffer damage if do damage present)
- System destroyafterhit destroy element if afterhit is zero and destroy
- System invulnerability applier(remove collision if invulnerable) and manager(removes or add invulnerability comp)
- System health damage: Apply suffer damage to health
- System destroy: id heatlh component <0, remove collision and 
- Skills now are destroyable after hit and do damage

### Chaged
- Name for Component Collider into Collidable
- Collision only adds component to entity collided with 
- Collision system: add suffer damage to receiver if receiver have health and attacker do damage.
- Clean system remove suffer damage
- Alpha color is applied 


## [Dev - 02/01/2023] - Better collision system
### Added 
- Collision group: React if different collision groups 
- Components: Do damage (attacker) and suffer damage (receiver)

## [Dev - 01/01/2023] - Skill system
### Added 
- Skill generator, components and system
### Changed
- Systems takes pointers of vector of entities to modify it
- Renderer as global variables

## [Dev - 28/12/2022] - Added some components
### Added
- Components: Health, damage, shield

## [Dev - 24/12/2022] - App Base
### Added
- Components: Transform, rigid body, collision, etc
- Systems: physics, render,plqyer behavior, etc